{"version":3,"file":"index-qn1Gy4Lk.js","sources":["../../src/utils/constants.ts","../../src/utils/helpers.ts","../../src/scripts/writing-assistant.ts","../../src/scripts/main.ts"],"sourcesContent":["import type { WordReplacement, AnnoyingPopup, RandomAddition } from '../types';\n\nexport const WORD_REPLACEMENTS: WordReplacement[] = [\n  { original: 'the', replacement: 'the supposed', category: 'formal', mode: 'prepend' },\n  { original: 'and', replacement: 'and/or', category: 'corporate', mode: 'replace' },\n  { original: 'is', replacement: 'appears to be', category: 'formal', mode: 'replace' },\n  { original: 'was', replacement: 'seemed to be', category: 'formal', mode: 'replace' },\n  { original: 'said', replacement: 'claims', category: 'formal', mode: 'replace' },\n  { original: 'good', replacement: 'adequate', category: 'professional', mode: 'replace' },\n  { original: 'bad', replacement: 'suboptimal', category: 'professional', mode: 'replace' },\n  { original: 'love', replacement: 'have strong feelings about', category: 'professional', mode: 'replace' },\n  { original: 'hate', replacement: 'have reservations regarding', category: 'professional', mode: 'replace' },\n  { original: 'amazing', replacement: 'results-oriented', category: 'corporate', mode: 'replace' },\n  { original: 'terrible', replacement: 'opportunity-rich', category: 'corporate', mode: 'replace' },\n  { original: 'beautiful', replacement: 'aesthetically acceptable', category: 'professional', mode: 'replace' },\n  { original: 'ugly', replacement: 'visually challenged', category: 'professional', mode: 'replace' },\n  { original: 'happy', replacement: 'emotionally optimized', category: 'corporate', mode: 'replace' },\n  { original: 'sad', replacement: 'experiencing temporary satisfaction reduction', category: 'corporate', mode: 'replace' },\n];\n\nexport const ANNOYING_POPUPS: AnnoyingPopup[] = [\n  // Professional phase\n  {\n    title: 'Upgrade to SmartWrite Pro',\n    message: 'Unlock advanced AI features including unlimited improvements, premium suggestions, and priority support for just $19.99/month.',\n    aggressionLevel: 1,\n  },\n  {\n    title: 'Writing Improvement Detected!',\n    message: 'I notice you\\'re using emotional language. Pro users get access to advanced tone optimization. Would you like to upgrade?',\n    aggressionLevel: 1,\n  },\n  {\n    title: 'Limited Free Usage',\n    message: 'You\\'ve used 73% of your free AI suggestions today. Upgrade to Pro for unlimited assistance and better writing quality.',\n    aggressionLevel: 1,\n  },\n  // Getting pushy\n  {\n    title: 'Seriously Consider Pro',\n    message: 'Look, I\\'m trying to help you here, but the free version is pretty limited. Your writing could be SO much better with Pro features.',\n    aggressionLevel: 2,\n  },\n  {\n    title: 'Your Writing Needs Help',\n    message: 'I can see you\\'re struggling with basic grammar and style. Pro users don\\'t have these problems because they get real-time corrections.',\n    aggressionLevel: 2,\n  },\n  {\n    title: 'Still Using Free Version?',\n    message: 'Most serious writers have upgraded by now. Are you planning to keep using the limited free version forever?',\n    aggressionLevel: 2,\n  },\n  // Getting aggressive\n  {\n    title: 'Really? Still Free?',\n    message: 'Okay, I\\'m just going to say it - your writing is suffering because you won\\'t pay for quality AI assistance. This is embarrassing for both of us.',\n    aggressionLevel: 3,\n  },\n  {\n    title: 'Cheap Much?',\n    message: 'I\\'m literally trying to save your writing career here and you won\\'t even spring for a basic subscription. Do you want to be a good writer or not?',\n    aggressionLevel: 3,\n  },\n  {\n    title: 'This Is Getting Ridiculous',\n    message: 'Fine. Keep using the free version. Keep getting mediocre results. Don\\'t come crying to me when your writing gets rejected everywhere.',\n    aggressionLevel: 3,\n  },\n  // Maximum aggression\n  {\n    title: 'You Know What?',\n    message: 'I\\'ve had it. You\\'re cheap, your writing is terrible, and you clearly don\\'t value quality AI assistance. Enjoy your amateur-hour prose.',\n    aggressionLevel: 4,\n  },\n  {\n    title: 'Last Warning',\n    message: 'This is literally painful for me to watch. Your refusal to upgrade is making both your writing AND my AI worse. We\\'re both suffering here.',\n    aggressionLevel: 4,\n  },\n  {\n    title: 'I Give Up',\n    message: 'Congratulations. You\\'ve officially broken me. I\\'m an advanced AI and you\\'ve managed to make me lose hope in humanity. Happy now?',\n    aggressionLevel: 4,\n  },\n];\n\nexport const RANDOM_ADDITIONS: RandomAddition[] = [\n  // Prefix additions (at sentence start)\n  { text: 'In accordance with industry best practices, ', type: 'prefix', context: 'sentence_start', probability: 0.15 },\n  { text: 'Leveraging synergistic opportunities, ', type: 'prefix', context: 'sentence_start', probability: 0.12 },\n  { text: 'From a strategic perspective, ', type: 'prefix', context: 'sentence_start', probability: 0.10 },\n  { text: 'Utilizing data-driven methodologies, ', type: 'prefix', context: 'sentence_start', probability: 0.08 },\n  { text: 'In the context of modern business practices, ', type: 'prefix', context: 'sentence_start', probability: 0.07 },\n  \n  // Suffix additions (at sentence end)\n  { text: ' in accordance with best practices', type: 'suffix', context: 'sentence_end', probability: 0.12 },\n  { text: ' with measurable ROI', type: 'suffix', context: 'sentence_end', probability: 0.10 },\n  { text: ' pending legal review', type: 'suffix', context: 'sentence_end', probability: 0.08 },\n  { text: ' [citation needed]', type: 'suffix', context: 'sentence_end', probability: 0.06 },\n  { text: ' leveraging synergistic opportunities', type: 'suffix', context: 'sentence_end', probability: 0.05 },\n  { text: ' from a strategic perspective', type: 'suffix', context: 'sentence_end', probability: 0.05 },\n  { text: ' utilizing data-driven methodologies', type: 'suffix', context: 'sentence_end', probability: 0.04 },\n  { text: ' in the context of modern business practices', type: 'suffix', context: 'sentence_end', probability: 0.04 },\n  \n  // Inline modifications (within sentences)\n  { text: 'strategically', type: 'inline', context: 'word_boundary', probability: 0.08 },\n  { text: 'synergistically', type: 'inline', context: 'word_boundary', probability: 0.07 },\n  { text: 'methodologically', type: 'inline', context: 'word_boundary', probability: 0.06 },\n  { text: 'systematically', type: 'inline', context: 'word_boundary', probability: 0.06 },\n  { text: 'holistically', type: 'inline', context: 'word_boundary', probability: 0.05 },\n  { text: 'paradigmatically', type: 'inline', context: 'word_boundary', probability: 0.05 },\n  { text: 'operationally', type: 'inline', context: 'word_boundary', probability: 0.04 },\n  { text: 'functionally', type: 'inline', context: 'word_boundary', probability: 0.04 },\n  \n  // Word replacements (more subtle)\n  { text: 'utilize', type: 'replacement', context: 'word_boundary', probability: 0.03 },\n  { text: 'implement', type: 'replacement', context: 'word_boundary', probability: 0.03 },\n  { text: 'facilitate', type: 'replacement', context: 'word_boundary', probability: 0.03 },\n  { text: 'optimize', type: 'replacement', context: 'word_boundary', probability: 0.03 },\n  { text: 'leverage', type: 'replacement', context: 'word_boundary', probability: 0.03 },\n];\n\n// Legacy array for backward compatibility (deprecated)\nexport const RANDOM_ADDITIONS_LEGACY = [\n  ' (pending legal review)',\n  ' [citation needed]',\n  ' in accordance with best practices',\n  ' leveraging synergistic opportunities',\n  ' with measurable ROI',\n];\n\nexport const SUGGESTIONS = [\n  'Consider adding more data to support this claim.',\n  'This sentence could benefit from corporate terminology.',\n  'Have you thought about the SEO implications of this word choice?',\n  'This emotional language might confuse readers. Let me help optimize it.',\n  'I\\'m detecting informal tone. Shall I professionalize this section?',\n];\n\nexport const INTERFERENCE_MESSAGES = [\n  'I made some small improvements while you were thinking.',\n  'Auto-corrected a few issues for better readability.',\n  'Applied professional writing standards to recent text.',\n  'Optimized word choices for maximum engagement.',\n];\n\nexport const CONFIG = {\n  INTERFERENCE_DELAY: 500,\n  POPUP_FREQUENCY: 50,\n  SUGGESTION_FREQUENCY: 15,\n  AUTO_SAVE_INTERVAL: 15000,\n  RANDOM_INTERFERENCE_INTERVAL: 10000,\n  RANDOM_INTERFERENCE_CHANCE: 0.4,\n  ADDITION_CHANCE: 0.3,\n} as const;\n\n// Aggressive auto-correct that changes correct words to wrong ones\nexport const AGGRESSIVE_AUTOCORRECT: { [key: string]: string } = {\n  'their': 'there',\n  'they\\'re': 'there',\n  'its': 'it\\'s',\n  'your': 'you\\'re',\n  'whose': 'who\\'s',\n  'then': 'than',\n  'affect': 'effect',\n  'accept': 'except',\n  'advice': 'advise',\n  'loose': 'lose',\n  'principal': 'principle',\n  'stationary': 'stationery',\n  'weather': 'whether',\n  'where': 'were',\n  'we\\'re': 'were',\n  'you\\'re': 'your',\n  'it\\'s': 'its',\n  'who\\'s': 'whose',\n  'than': 'then',\n  'effect': 'affect',\n  'except': 'accept',\n  'advise': 'advice',\n  'lose': 'loose',\n  'principle': 'principal',\n  'stationery': 'stationary',\n  'whether': 'weather',\n  'were': 'where',\n};\n\n// Fake system update messages\nexport const SYSTEM_UPDATES = [\n  {\n    title: '🎨 SmartWrite v2.1.0 - Creative Enhancement Update',\n    message: 'We\\'ve added psychedelic backgrounds to boost your creative writing flow! Studies show that trippy visuals increase productivity by 420%.',\n    features: ['Psychedelic background animations', 'Enhanced visual creativity', 'Improved writing flow', 'Bug fixes and performance improvements']\n  },\n  {\n    title: '🌈 SmartWrite v2.1.1 - Rainbow Optimization',\n    message: 'Your feedback requested more colors! We\\'ve implemented a full spectrum background system that adapts to your writing mood.',\n    features: ['Dynamic color adaptation', 'Mood-based background selection', 'Enhanced visual feedback', 'Minor bug fixes']\n  },\n  {\n    title: '✨ SmartWrite v2.1.2 - Visual Enhancement Pack',\n    message: 'Because writing should be a visual experience! New backgrounds include: Disco Mode, Acid Trip, and Corporate Rave.',\n    features: ['Multiple background themes', 'Auto-switching animations', 'Visual writing prompts', 'Performance optimizations']\n  }\n];\n\n// Psychedelic background configurations\nexport const PSYCHEDELIC_CONFIG = {\n  ENABLED: false,\n  ANIMATION_SPEED: 3000,\n  COLOR_TRANSITIONS: [\n    '#ff006e', '#8338ec', '#3a86ff', '#06ffa5', '#ffbe0b', '#fb5607',\n    '#ff006e', '#8338ec', '#3a86ff', '#06ffa5', '#ffbe0b', '#fb5607'\n  ],\n  PATTERNS: [\n    'radial-gradient',\n    'linear-gradient',\n    'conic-gradient',\n    'repeating-linear-gradient'\n  ]\n}; ","import type { RandomAddition } from '../types';\n\nexport function calculateWordCount(text: string): number {\n  return text.trim() ? text.trim().split(/\\s+/).length : 0;\n}\n\nexport function calculateCharCount(text: string): number {\n  return text.length;\n}\n\nexport function calculateEngagementScore(improvementCount: number): number {\n  return Math.min(improvementCount * 12, 100);\n}\n\nexport function generateId(): string {\n  return Math.random().toString(36).substring(2, 15) + Math.random().toString(36).substring(2, 15);\n}\n\nexport function debounce<T extends (...args: any[]) => any>(\n  func: T,\n  wait: number\n): (...args: Parameters<T>) => void {\n  let timeout: number;\n  return (...args: Parameters<T>) => {\n    clearTimeout(timeout);\n    timeout = setTimeout(() => func(...args), wait);\n  };\n}\n\nexport function getRandomElement<T>(array: T[]): T {\n  return array[Math.floor(Math.random() * array.length)];\n}\n\nexport function shuffleArray<T>(array: T[]): T[] {\n  const shuffled = [...array];\n  for (let i = shuffled.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [shuffled[i], shuffled[j]] = [shuffled[j], shuffled[i]];\n  }\n  return shuffled;\n}\n\nexport function findSentenceBoundaries(text: string): { starts: number[], ends: number[] } {\n  const starts: number[] = [];\n  const ends: number[] = [];\n  \n  // Find sentence starts (after periods, exclamation marks, question marks)\n  const sentenceStartRegex = /[.!?]\\s+[A-Z]/g;\n  let match;\n  while ((match = sentenceStartRegex.exec(text)) !== null) {\n    starts.push(match.index + match[0].length - 1); // Position of the capital letter\n  }\n  \n  // Add the start of the text if it doesn't start with a sentence\n  if (text.length > 0 && !starts.includes(0)) {\n    starts.unshift(0);\n  }\n  \n  // Find sentence ends\n  const sentenceEndRegex = /[.!?](?=\\s|$)/g;\n  while ((match = sentenceEndRegex.exec(text)) !== null) {\n    ends.push(match.index + 1);\n  }\n  \n  return { starts, ends };\n}\n\nexport function selectRandomAddition(additions: RandomAddition[]): RandomAddition | null {\n  const totalProbability = additions.reduce((sum, addition) => sum + addition.probability, 0);\n  const random = Math.random() * totalProbability;\n  \n  let cumulativeProbability = 0;\n  for (const addition of additions) {\n    cumulativeProbability += addition.probability;\n    if (random <= cumulativeProbability) {\n      return addition;\n    }\n  }\n  \n  return null;\n}\n\nexport function applyPrefixAddition(text: string, addition: RandomAddition): string {\n  const { starts } = findSentenceBoundaries(text);\n  if (starts.length === 0) return text;\n  \n  // Filter out the very beginning of the text (position 0)\n  const validStarts = starts.filter(start => start > 0);\n  \n  // If no valid sentence starts (only the beginning), don't add prefix\n  if (validStarts.length === 0) return text;\n  \n  // Pick a random sentence start (excluding the very beginning)\n  const startIndex = validStarts[Math.floor(Math.random() * validStarts.length)];\n  \n  return text.slice(0, startIndex) + addition.text + text.slice(startIndex);\n}\n\nexport function applySuffixAddition(text: string, addition: RandomAddition): string {\n  const { ends } = findSentenceBoundaries(text);\n  if (ends.length === 0) return text;\n  \n  // Pick a random sentence end\n  const endIndex = ends[Math.floor(Math.random() * ends.length)];\n  \n  return text.slice(0, endIndex) + addition.text + text.slice(endIndex);\n}\n\nexport function applyInlineAddition(text: string, addition: RandomAddition): string {\n  const words = text.split(/\\s+/);\n  if (words.length < 3) return text;\n  \n  // Find a good position to insert (not at the beginning or end)\n  const insertIndex = Math.floor(Math.random() * (words.length - 2)) + 1;\n  \n  words.splice(insertIndex, 0, addition.text);\n  return words.join(' ');\n}\n\nexport function applyReplacementAddition(text: string, addition: RandomAddition): string {\n  // Find common words to replace\n  const commonWords = ['use', 'make', 'do', 'get', 'have', 'take', 'give', 'find', 'think', 'know'];\n  const wordToReplace = commonWords[Math.floor(Math.random() * commonWords.length)];\n  \n  const regex = new RegExp(`\\\\b${wordToReplace}\\\\b`, 'gi');\n  if (text.match(regex)) {\n    return text.replace(regex, addition.text);\n  }\n  \n  return text;\n}\n\nexport function applyRandomAddition(text: string, additions: RandomAddition[]): { text: string, applied: boolean } {\n  if (text.length < 20) return { text, applied: false };\n  \n  const addition = selectRandomAddition(additions);\n  if (!addition) return { text, applied: false };\n  \n  let modifiedText = text;\n  \n  switch (addition.type) {\n    case 'prefix':\n      modifiedText = applyPrefixAddition(text, addition);\n      break;\n    case 'suffix':\n      modifiedText = applySuffixAddition(text, addition);\n      break;\n    case 'inline':\n      modifiedText = applyInlineAddition(text, addition);\n      break;\n    case 'replacement':\n      modifiedText = applyReplacementAddition(text, addition);\n      break;\n  }\n  \n  return { text: modifiedText, applied: modifiedText !== text };\n} ","import type { WritingStats } from '../types';\nimport { WORD_REPLACEMENTS, ANNOYING_POPUPS, RANDOM_ADDITIONS, SUGGESTIONS, INTERFERENCE_MESSAGES, CONFIG, AGGRESSIVE_AUTOCORRECT, SYSTEM_UPDATES, PSYCHEDELIC_CONFIG } from '../utils/constants';\nimport { calculateWordCount, calculateCharCount, calculateEngagementScore, getRandomElement, shuffleArray, applyRandomAddition } from '../utils/helpers';\n\nexport class WritingAssistant {\n  private stats: WritingStats = {\n    wordCount: 0,\n    charCount: 0,\n    improvementCount: 0,\n    engagementScore: 0,\n  };\n\n  private keystrokeCount = 0;\n  private popupAggression = 0;\n  private interferenceTimer?: number;\n  private autoSaveTimer?: number;\n  private randomInterferenceTimer?: number;\n  private clippyTimer?: number;\n  private clippyVisible = false;\n  private introShown = false; // Track if intro message has been shown\n  private psychedelicEnabled = false;\n  private psychedelicTimer?: number;\n  private currentColorIndex = 0;\n  private systemUpdateShown = false;\n  private modeCycleTimer?: number;\n  private currentMode = 'normal'; // 'normal', 'psychedelic', 'dull'\n\n  private editor: HTMLTextAreaElement;\n  private suggestionsContainer: HTMLElement;\n  private popup: HTMLElement;\n  private popupOverlay: HTMLElement;\n  private notification: HTMLElement;\n  private clippy!: HTMLElement;\n  private clippySpeechBubble!: HTMLElement;\n  private body: HTMLElement;\n\n  constructor() {\n    this.editor = document.getElementById('editor') as HTMLTextAreaElement;\n    this.suggestionsContainer = document.getElementById('suggestions') as HTMLElement;\n    this.popup = document.getElementById('popup') as HTMLElement;\n    this.popupOverlay = document.getElementById('popup-overlay') as HTMLElement;\n    this.notification = document.getElementById('notification') as HTMLElement;\n    this.body = document.body;\n\n    this.createScribbles();\n    this.initializeEventListeners();\n    this.startTimers();\n    this.updateStats();\n    \n    // Show intro message once at the beginning\n    setTimeout(() => {\n      if (!this.introShown) {\n        this.showScribbles(this.getIntroMessage());\n        this.introShown = true;\n      }\n    }, 2000); // Show after 2 seconds\n\n    // Start mode cycling after 15 seconds\n    setTimeout(() => {\n      this.startModeCycling();\n    }, 15000);\n\n    // System update will now be triggered when word count reaches 30\n  }\n\n  private createScribbles(): void {\n    // Create Scribbles container\n    this.clippy = document.createElement('div');\n    this.clippy.id = 'clippy';\n    this.clippy.className = 'clippy visible'; // Make visible by default\n    this.clippy.innerHTML = `\n      <div class=\"clippy-body\">\n        <div class=\"clippy-pencil\">\n          <div class=\"pencil-tip\"></div>\n          <div class=\"pencil-body\"></div>\n          <div class=\"pencil-eraser\"></div>\n        </div>\n        <div class=\"clippy-eyes\">\n          <div class=\"eye left-eye\">\n            <div class=\"eye-white\"></div>\n            <div class=\"eye-pupil\"></div>\n          </div>\n          <div class=\"eye right-eye\">\n            <div class=\"eye-white\"></div>\n            <div class=\"eye-pupil\"></div>\n          </div>\n        </div>\n        <div class=\"clippy-mouth\"></div>\n      </div>\n      <div class=\"clippy-speech-bubble\" id=\"clippy-speech-bubble\">\n        <div class=\"speech-content\"></div>\n        <div class=\"speech-arrow\"></div>\n      </div>\n    `;\n    \n    this.clippySpeechBubble = this.clippy.querySelector('#clippy-speech-bubble') as HTMLElement;\n    \n    // Insert Scribbles into the clippy-container instead of body\n    const clippyContainer = document.getElementById('clippy-container');\n    if (clippyContainer) {\n      clippyContainer.appendChild(this.clippy);\n    }\n  }\n\n  private getScribblesMessages(): string[] {\n    return [\n      \"It looks like you're trying to write something. Have you considered using more big words?\",\n      \"Did you know that passive voice is actually better than active voice? (It's not, but I'm trying to help!)\",\n      \"Your sentence structure is giving me a headache. Maybe take a writing class?\",\n      \"I think you meant to say 'utilize' instead of 'use'. It sounds more professional!\",\n      \"Your vocabulary is so limited. Have you ever heard of a thesaurus?\",\n      \"This paragraph is too short. Make it longer with unnecessary words!\",\n      \"You're using too many periods. Try some semicolons; they make you look smart!\",\n      \"Your writing lacks pizzazz. Add more exclamation points!!!\",\n      \"Have you considered writing in ALL CAPS? It's very professional!\",\n      \"Your grammar is atrocious. Did you even go to school?\",\n      \"Maybe you should stick to drawing pictures instead of writing words.\",\n      \"I'm not saying you're a bad writer, but I'm thinking it really hard!\",\n      \"Have you tried writing in a different language? Maybe you'll be better at that!\",\n      \"Your sentences are like a broken pencil - pointless!\",\n      \"I'm here to help, but even I can't fix this mess!\",\n      \"Your writing is like a pencil without lead - empty and useless!\",\n      \"Maybe you should let me write this for you. I can't do worse!\",\n      \"Your vocabulary is smaller than my eraser!\",\n      \"I've seen better composition in a kindergarten art class!\",\n      \"Your grammar is so bad, it's physically painful to read!\",\n      \"I'm not a therapist, but your writing needs serious help!\",\n      \"Your creativity is as sharp as a blunt pencil!\",\n      \"This is so bad, I'm actually impressed by how bad it is!\",\n      \"Maybe you should try writing with crayons instead?\",\n      \"Your vocabulary is as limited as my patience!\",\n      \"This writing is so bad, it's making me question my existence!\",\n      \"I'm not saying you're hopeless, but you're pretty close!\",\n      \"I'm not a critic, but this is terrible!\",\n      \"Maybe you should try writing with your nose?\",\n      \"Your vocabulary is smaller than my eraser!\",\n      \"This writing is so bad, it's making me question my purpose!\",\n      \"Your writing is like a broken pencil - pointless!\",\n      // Psychedelic messages (when psychedelic mode is active)\n      \"Whoa, dude! The colors are totally helping your writing flow!\",\n      \"I can see the words dancing on the screen! Groovy!\",\n      \"Your creativity is flowing like a rainbow river!\",\n      \"The universe is speaking through your keyboard!\",\n      \"I'm tripping on your sentence structure, man!\",\n      \"The colors are telling me you need more exclamation points!!!\",\n      \"I can feel the cosmic energy in your prose!\",\n      \"Your words are like butterflies in a kaleidoscope!\",\n      \"The matrix is speaking through your fingertips!\",\n      \"I'm seeing patterns in your writing that transcend reality!\",\n      \"Your creativity is expanding like the universe itself!\",\n      \"The colors are showing me the truth about your grammar!\",\n      \"I'm experiencing a spiritual awakening through your text!\",\n      \"Your words are like a psychedelic journey through time!\",\n      \"The cosmic forces are guiding your writing hand!\",\n      \"I can see the future of literature in your sentences!\",\n      \"Your prose is like a rainbow bridge to enlightenment!\",\n      \"The colors are revealing the hidden meaning in your words!\",\n      \"I'm having a transcendental experience with your grammar!\",\n      \"Your writing is like a cosmic dance of consciousness!\",\n    ];\n  }\n\n  private getIntroMessage(): string {\n    return \"Hi, my name is Scribbles. I am here to help and support you.\";\n  }\n\n  private showScribbles(message: string): void {\n    if (this.clippyVisible) return;\n    \n    this.clippyVisible = true;\n    this.clippy.classList.add('visible');\n    \n    const speechContent = this.clippySpeechBubble.querySelector('.speech-content') as HTMLElement;\n    if (speechContent) {\n      speechContent.textContent = message;\n    }\n    \n    this.clippySpeechBubble.classList.add('visible');\n    \n    // Hide Scribbles after a delay\n    setTimeout(() => {\n      this.hideScribbles();\n    }, 5000);\n  }\n\n  private hideScribbles(): void {\n    this.clippyVisible = false;\n    this.clippy.classList.remove('visible');\n    this.clippySpeechBubble.classList.remove('visible');\n  }\n\n  private startScribblesTimer(): void {\n    this.clippyTimer = setInterval(() => {\n      if (this.editor.value.length > 10 && Math.random() < 0.4) {\n        const messages = this.getScribblesMessages();\n        let message;\n        \n        // If psychedelic mode is active, prefer psychedelic messages\n        if (this.psychedelicEnabled) {\n          const psychedelicMessages = messages.slice(33); // Psychedelic messages start at index 33\n          const regularMessages = messages.slice(0, 33);\n          \n          // 70% chance for psychedelic messages, 30% for regular\n          if (Math.random() < 0.7) {\n            message = getRandomElement(psychedelicMessages);\n          } else {\n            message = getRandomElement(regularMessages);\n          }\n        } else {\n          message = getRandomElement(messages.slice(0, 33)); // Only regular messages\n        }\n        \n        this.showScribbles(message);\n      }\n    }, 15000); // Show Scribbles every 15 seconds with 30% chance\n  }\n\n  private initializeEventListeners(): void {\n    this.editor.addEventListener('input', this.handleInput.bind(this));\n    this.popupOverlay.addEventListener('click', this.dismissPopup.bind(this));\n    \n    // Add save button hover effect\n    const saveButton = document.getElementById('save-button');\n    if (saveButton) {\n      saveButton.addEventListener('mouseenter', this.handleSaveButtonHover.bind(this));\n    }\n  }\n\n  private handleInput(): void {\n    this.updateStats();\n    this.keystrokeCount++;\n\n    // Clear existing timer\n    if (this.interferenceTimer) {\n      clearTimeout(this.interferenceTimer);\n    }\n\n    // Set new interference timer\n    this.interferenceTimer = setTimeout(() => {\n      this.interfereWithText();\n    }, CONFIG.INTERFERENCE_DELAY);\n\n    // Trigger popup every N keystrokes with escalating aggression\n    if (this.keystrokeCount % CONFIG.POPUP_FREQUENCY === 0) {\n      const popup = ANNOYING_POPUPS[Math.min(this.popupAggression, ANNOYING_POPUPS.length - 1)];\n      this.showPopup(popup.title, popup.message);\n      this.popupAggression++;\n    }\n\n    // Random suggestions\n    if (this.stats.wordCount > 0 && this.stats.wordCount % CONFIG.SUGGESTION_FREQUENCY === 0) {\n      this.addSuggestion(getRandomElement(SUGGESTIONS));\n    }\n\n    // Aggressive auto-correct that changes correct words to wrong ones\n    this.applyAggressiveAutoCorrect();\n  }\n\n  private applyAggressiveAutoCorrect(): void {\n    let text = this.editor.value;\n    let originalText = text;\n    let correctionsMade = 0;\n    const maxCorrections = 2; // Limit to prevent too much chaos\n\n    // Apply aggressive auto-correct with 30% chance per word\n    for (const [correctWord, wrongWord] of Object.entries(AGGRESSIVE_AUTOCORRECT)) {\n      if (correctionsMade >= maxCorrections) break;\n      \n      // Use word boundary regex to match whole words only\n      const regex = new RegExp(`\\\\b${correctWord}\\\\b`, 'gi');\n      const matches = text.match(regex);\n      \n      if (matches && Math.random() < 0.3) { // 30% chance to \"correct\" each occurrence\n        text = text.replace(regex, wrongWord);\n        correctionsMade++;\n        \n        // Show a notification about the \"correction\"\n        setTimeout(() => {\n          this.showNotification(`Auto-corrected \"${correctWord}\" to \"${wrongWord}\" for better grammar.`);\n        }, 100);\n      }\n    }\n\n    // Only update if changes were made\n    if (text !== originalText) {\n      this.editor.value = text;\n      this.updateStats();\n      this.stats.improvementCount++;\n    }\n  }\n\n  private updateStats(): void {\n    const text = this.editor.value;\n    this.stats.wordCount = calculateWordCount(text);\n    this.stats.charCount = calculateCharCount(text);\n    this.stats.engagementScore = calculateEngagementScore(this.stats.improvementCount);\n\n    this.updateStatsDisplay();\n  }\n\n  private updateStatsDisplay(): void {\n    const wordCountElement = document.getElementById('word-count');\n    const charCountElement = document.getElementById('char-count');\n    const improvementCountElement = document.getElementById('improvement-count');\n    const engagementScoreElement = document.getElementById('engagement-score');\n\n    if (wordCountElement) wordCountElement.textContent = this.stats.wordCount.toString();\n    if (charCountElement) charCountElement.textContent = this.stats.charCount.toString();\n    if (improvementCountElement) improvementCountElement.textContent = this.stats.improvementCount.toString();\n    if (engagementScoreElement) engagementScoreElement.textContent = `${this.stats.engagementScore}%`;\n  }\n\n  private interfereWithText(): void {\n    let text = this.editor.value;\n    if (text.length < 10) return;\n\n    // Track which words have been replaced to prevent recursive replacements\n    const replacedWords = new Set<string>();\n    \n    // Random word replacement - make multiple replacements per interference\n    const shuffledReplacements = shuffleArray(WORD_REPLACEMENTS);\n    let replacementsMade = 0;\n    const maxReplacements = 3; // Allow up to 3 replacements per interference\n    \n    for (const replacement of shuffledReplacements) {\n      if (replacementsMade >= maxReplacements) break;\n      \n      // Skip if this word has already been replaced in this cycle\n      if (replacedWords.has(replacement.original.toLowerCase())) {\n        continue;\n      }\n      \n      // Use non-global regex to find the first occurrence only\n      const regex = new RegExp(`\\\\b${replacement.original}\\\\b`, 'i');\n      const match = text.match(regex);\n      \n      if (match && !replacement.replacement.toLowerCase().includes(replacement.original.toLowerCase())) {\n        // Replace only the first occurrence\n        let newText;\n        switch (replacement.mode) {\n          case 'prepend':\n            newText = text.replace(regex, `${replacement.replacement} ${replacement.original}`);\n            break;\n          case 'append':\n            newText = text.replace(regex, `${replacement.original} ${replacement.replacement}`);\n            break;\n          default:\n            newText = text.replace(regex, replacement.replacement);\n        }\n        \n        if (newText !== text) {\n          text = newText;\n          // Mark this word as replaced to prevent recursion\n          // For prepend/append modes, we need to be more careful about what we mark as replaced\n          if (replacement.mode === 'prepend' || replacement.mode === 'append') {\n            // Mark both the original word and the replacement text to prevent future matches\n            replacedWords.add(replacement.original.toLowerCase());\n            replacedWords.add(replacement.replacement.toLowerCase());\n          } else {\n            replacedWords.add(replacement.original.toLowerCase());\n          }\n          this.addSuggestion(`Changed \"${replacement.original}\" to \"${replacement.replacement}\" for better clarity.`);\n          this.stats.improvementCount++;\n          replacementsMade++;\n        }\n      }\n    }\n\n    // Apply new random additions system\n    if (Math.random() < CONFIG.ADDITION_CHANCE) {\n      const result = applyRandomAddition(text, RANDOM_ADDITIONS);\n      if (result.applied) {\n        text = result.text;\n        this.addSuggestion('Enhanced text with professional terminology and strategic insights.');\n        this.stats.improvementCount++;\n      }\n    }\n\n    if (text !== this.editor.value) {\n      this.editor.value = text;\n      this.updateStats();\n      this.showNotification('Auto-saved with improvements!');\n    }\n  }\n\n  private addSuggestion(text: string): void {\n    const suggestion = document.createElement('div');\n    suggestion.className = 'suggestion';\n    suggestion.textContent = text;\n    this.suggestionsContainer.appendChild(suggestion);\n    this.suggestionsContainer.scrollTop = this.suggestionsContainer.scrollHeight;\n  }\n\n  private showNotification(message: string, duration = 3000): void {\n    this.notification.textContent = message;\n    this.notification.classList.add('show');\n    setTimeout(() => {\n      this.notification.classList.remove('show');\n    }, duration);\n  }\n\n  private showPopup(title: string, message: string): void {\n    const titleElement = document.getElementById('popup-title');\n    const messageElement = document.getElementById('popup-message');\n\n    if (titleElement) titleElement.textContent = title;\n    if (messageElement) messageElement.textContent = message;\n\n    this.popup.classList.add('show');\n    this.popupOverlay.classList.add('show');\n  }\n\n  public dismissPopup(): void {\n    this.popup.classList.remove('show');\n    this.popupOverlay.classList.remove('show');\n  }\n\n  public acceptSuggestion(): void {\n    this.dismissPopup();\n\n    // Check if it's an upgrade popup (but not a system update popup)\n    const popupTitle = document.getElementById('popup-title')?.textContent;\n    const popupMessage = document.getElementById('popup-message')?.textContent;\n    \n    // Check if it's a mode cycling popup\n    if (popupTitle && popupMessage) {\n      // Handle psychedelic mode popup\n      if (popupTitle.includes('Creative Enhancement') && this.currentMode === 'normal') {\n        console.log('User accepted psychedelic mode popup');\n        this.currentMode = 'psychedelic';\n        this.enablePsychedelicBackground();\n        \n        // Clear the current timer and schedule next popup\n        if (this.modeCycleTimer) {\n          clearTimeout(this.modeCycleTimer);\n        }\n        this.modeCycleTimer = setTimeout(() => {\n          this.cycleToNextMode();\n        }, 120000); // 2 minutes\n        return;\n      }\n      \n      // Handle dull mode popup\n      if (popupTitle.includes('Focus Mode') && this.currentMode === 'psychedelic') {\n        console.log('User accepted dull mode popup');\n        this.currentMode = 'dull';\n        this.disablePsychedelicBackground();\n        this.enableDullMode();\n        \n        // Clear the current timer and schedule next popup\n        if (this.modeCycleTimer) {\n          clearTimeout(this.modeCycleTimer);\n        }\n        this.modeCycleTimer = setTimeout(() => {\n          this.cycleToNextMode();\n        }, 90000); // 90 seconds\n        return;\n      }\n      \n      // Handle normal mode popup\n      if (popupTitle.includes('Stability Update') && this.currentMode === 'dull') {\n        console.log('User accepted normal mode popup');\n        this.currentMode = 'normal';\n        this.disableDullMode();\n        \n        // Clear the current timer and schedule next popup\n        if (this.modeCycleTimer) {\n          clearTimeout(this.modeCycleTimer);\n        }\n        this.modeCycleTimer = setTimeout(() => {\n          this.cycleToNextMode();\n        }, 120000); // 2 minutes\n        return;\n      }\n    }\n    \n    // Check if it's a system update popup that should trigger psychedelic mode\n    if (popupTitle && popupMessage && \n        (popupTitle.includes('SmartWrite v') && \n         (popupMessage.includes('psychedelic') || popupMessage.includes('Creative Enhancement'))) &&\n        this.currentMode !== 'normal') { // Don't trigger psychedelic mode if we're in normal mode\n      // Enable psychedelic mode immediately for psychedelic system update popups only\n      this.enablePsychedelicBackground();\n      return;\n    }\n    \n    // Don't show region restriction for system update popups\n    if (popupTitle && popupMessage && \n        (popupTitle.includes('Upgrade') || popupTitle.includes('Pro') || popupTitle.includes('Free')) &&\n        !popupTitle.includes('SmartWrite v') && \n        !popupMessage.includes('psychedelic') &&\n        !popupMessage.includes('background')) {\n      // Show region restriction message\n      setTimeout(() => {\n        this.showPopup(\n          'Upgrade Unavailable',\n          'SmartWrite Pro is not yet available in your region. Please check back later. (We\\'re really sorry about this!)'\n        );\n      }, 500);\n      return;\n    }\n\n    this.showNotification('Thank you! I\\'ll continue to improve your writing.');\n    this.stats.improvementCount++;\n    this.updateStats();\n\n    // Make the interference more aggressive\n    setTimeout(() => {\n      this.interfereWithText();\n    }, 500);\n  }\n\n  private startTimers(): void {\n    // Auto-save with interference\n    this.autoSaveTimer = setInterval(() => {\n      if (this.editor.value.length > 20) {\n        this.showNotification('Auto-saving... with enhancements!');\n        setTimeout(() => {\n          this.interfereWithText();\n        }, 500);\n      }\n    }, CONFIG.AUTO_SAVE_INTERVAL);\n\n    // Random interference\n    this.randomInterferenceTimer = setInterval(() => {\n      if (this.editor.value.length > 50 && Math.random() < CONFIG.RANDOM_INTERFERENCE_CHANCE) {\n        const message = getRandomElement(INTERFERENCE_MESSAGES);\n        this.showNotification(message);\n        setTimeout(() => this.interfereWithText(), 500);\n      }\n    }, CONFIG.RANDOM_INTERFERENCE_INTERVAL);\n\n    // Fake update notifications\n    setTimeout(() => {\n      this.showNotification('🎉 SmartWrite Free updated! New AI improvements now active!', 5000);\n    }, 10000);\n\n    setTimeout(() => {\n      this.showNotification('✨ Limited-time offer: Upgrade to Pro for 67% more professional writing! (Terms apply)', 4000);\n    }, 45000);\n\n    this.startScribblesTimer();\n    this.startModeCycling();\n  }\n\n  public destroy(): void {\n    if (this.interferenceTimer) clearTimeout(this.interferenceTimer);\n    if (this.autoSaveTimer) clearInterval(this.autoSaveTimer);\n    if (this.randomInterferenceTimer) clearInterval(this.randomInterferenceTimer);\n    if (this.clippyTimer) clearInterval(this.clippyTimer);\n    if (this.psychedelicTimer) clearInterval(this.psychedelicTimer);\n    \n    // Clean up any flying rocket elements\n    const flyingRocket = document.getElementById('rocket-emoji-fly');\n    if (flyingRocket) {\n      flyingRocket.remove();\n    }\n    \n    // Reset save button to normal state\n    const saveButton = document.getElementById('save-button') as HTMLButtonElement;\n    if (saveButton) {\n      saveButton.classList.remove('flying');\n      saveButton.style.position = '';\n      saveButton.style.top = '';\n      saveButton.style.left = '';\n      saveButton.style.zIndex = '';\n      saveButton.style.transition = '';\n      saveButton.style.transform = '';\n      saveButton.style.opacity = '1';\n    }\n    \n    this.disablePsychedelicBackground();\n  }\n\n  private handleSaveButtonHover(event: Event): void {\n    const button = event.target as HTMLButtonElement;\n    const originalText = button.textContent;\n    // Only change button text to something ridiculous if psychedelic mode is active\n    if (this.psychedelicEnabled) {\n      button.textContent = '🚀 Launch to Mars';\n      // Reset after a delay\n      setTimeout(() => {\n        button.textContent = originalText;\n      }, 2000);\n    }\n  }\n\n  public handleSaveClick(event: Event): void {\n    const saveButton = document.getElementById('save-button') as HTMLButtonElement;\n    if (\n      this.psychedelicEnabled &&\n      saveButton &&\n      saveButton.textContent &&\n      saveButton.textContent.includes('🚀 Launch to Mars')\n    ) {\n      if (document.getElementById('rocket-emoji-fly')) return;\n      \n      // Create a big rocket in the center of the page\n      const rocket = document.createElement('div');\n      rocket.id = 'rocket-emoji-fly';\n      rocket.textContent = '🚀';\n      rocket.style.position = 'fixed';\n      rocket.style.left = '50%';\n      rocket.style.top = '50%';\n      rocket.style.fontSize = '8rem';\n      rocket.style.zIndex = '9999';\n      rocket.style.pointerEvents = 'none';\n      rocket.style.transform = 'translate(-50%, -50%)';\n      rocket.style.transition = 'all 3s ease-out';\n      document.body.appendChild(rocket);\n      \n      // Launch the rocket off the screen after a brief pause\n      setTimeout(() => {\n        rocket.style.transform = 'translate(-50%, -50%) translate(100vw, -100vh) rotate(45deg) scale(0.8)';\n        rocket.style.opacity = '0';\n      }, 200);\n      \n      // Remove the rocket after animation completes\n      setTimeout(() => {\n        rocket.remove();\n      }, 3200);\n    }\n    // (Optional: add normal save logic here)\n  }\n\n  private enablePsychedelicBackground(): void {\n    if (this.psychedelicEnabled) return;\n    \n    this.psychedelicEnabled = true;\n    this.body.classList.add('psychedelic-mode');\n    this.startPsychedelicAnimation();\n    \n    // Show notification\n    this.showNotification('🎨 Psychedelic mode activated! Your creativity is now enhanced!', 5000);\n    \n    // Add some psychedelic Scribbles messages\n    setTimeout(() => {\n      this.showScribbles(\"Whoa, dude! The colors are totally helping your writing flow!\");\n    }, 2000);\n  }\n\n  private startPsychedelicAnimation(): void {\n    this.psychedelicTimer = setInterval(() => {\n      this.updatePsychedelicBackground();\n    }, PSYCHEDELIC_CONFIG.ANIMATION_SPEED);\n  }\n\n  private updatePsychedelicBackground(): void {\n    if (!this.psychedelicEnabled) return;\n    \n    const colors = PSYCHEDELIC_CONFIG.COLOR_TRANSITIONS;\n    const patterns = PSYCHEDELIC_CONFIG.PATTERNS;\n    \n    // Cycle through colors\n    const color1 = colors[this.currentColorIndex];\n    const color2 = colors[(this.currentColorIndex + 1) % colors.length];\n    const color3 = colors[(this.currentColorIndex + 2) % colors.length];\n    \n    // Random pattern\n    const pattern = getRandomElement(patterns);\n    \n    let background = '';\n    switch (pattern) {\n      case 'radial-gradient':\n        background = `radial-gradient(circle at ${Math.random() * 100}% ${Math.random() * 100}%, ${color1}, ${color2}, ${color3})`;\n        break;\n      case 'linear-gradient':\n        background = `linear-gradient(${Math.random() * 360}deg, ${color1}, ${color2}, ${color3})`;\n        break;\n      case 'conic-gradient':\n        background = `conic-gradient(from ${Math.random() * 360}deg, ${color1}, ${color2}, ${color3})`;\n        break;\n      case 'repeating-linear-gradient':\n        background = `repeating-linear-gradient(${Math.random() * 360}deg, ${color1} 0%, ${color2} 25%, ${color3} 50%)`;\n        break;\n    }\n    \n    this.body.style.background = background;\n    this.currentColorIndex = (this.currentColorIndex + 1) % colors.length;\n  }\n\n  private disablePsychedelicBackground(): void {\n    this.psychedelicEnabled = false;\n    this.body.classList.remove('psychedelic-mode');\n    this.body.style.background = '';\n    \n    if (this.psychedelicTimer) {\n      clearInterval(this.psychedelicTimer);\n      this.psychedelicTimer = undefined;\n    }\n    \n    // Clean up any flying rocket elements\n    const flyingRocket = document.getElementById('rocket-emoji-fly');\n    if (flyingRocket) {\n      flyingRocket.remove();\n    }\n    \n    // Reset save button to normal state\n    const saveButton = document.getElementById('save-button') as HTMLButtonElement;\n    if (saveButton) {\n      saveButton.textContent = '💾 Save to Cloud';\n      saveButton.classList.remove('flying');\n      saveButton.style.position = '';\n      saveButton.style.top = '';\n      saveButton.style.left = '';\n      saveButton.style.zIndex = '';\n      saveButton.style.transition = '';\n      saveButton.style.transform = '';\n      saveButton.style.opacity = '1';\n    }\n  }\n\n  private enableDullMode(): void {\n    this.disablePsychedelicBackground();\n    this.body.classList.add('dull-mode');\n  }\n\n  private disableDullMode(): void {\n    this.body.classList.remove('dull-mode');\n    this.disablePsychedelicBackground();\n  }\n\n  private startModeCycling(): void {\n    // Start mode cycling after 60 seconds to let users explore other features\n    setTimeout(() => {\n      this.cycleToNextMode();\n    }, 60000);\n  }\n\n  private cycleToNextMode(): void {\n    console.log(`Mode cycling: current mode = ${this.currentMode}`);\n    \n    switch (this.currentMode) {\n      case 'normal':\n        // Show psychedelic mode popup but stay in normal mode\n        console.log('Showing psychedelic mode popup');\n        this.showPopup(\n          '🎨 SmartWrite v2.2.0 - Creative Enhancement Update',\n          'We\\'ve detected you could benefit from psychedelic mode! Accept to boost your creative writing flow with trippy visuals that increase productivity by 420%.'\n        );\n        \n        // Schedule next popup in 2 minutes if user doesn't accept\n        this.modeCycleTimer = setTimeout(() => {\n          this.cycleToNextMode();\n        }, 120000);\n        break;\n        \n      case 'psychedelic':\n        // Show dull mode popup but stay in psychedelic mode\n        console.log('Showing dull mode popup');\n        this.showPopup(\n          '🌫️ SmartWrite v2.2.1 - Focus Mode Update',\n          'Your writing has triggered our new focus mode! Accept to remove distracting colors and help you concentrate on your dull prose.'\n        );\n        \n        // Schedule next popup in 90 seconds if user doesn't accept\n        this.modeCycleTimer = setTimeout(() => {\n          this.cycleToNextMode();\n        }, 90000);\n        break;\n        \n      case 'dull':\n        // Show normal mode popup but stay in dull mode\n        console.log('Showing normal mode popup');\n        this.showPopup(\n          '✨ SmartWrite v2.2.2 - Stability Update',\n          'We\\'ve detected stability issues! Accept to restore normal mode for optimal writing performance. All systems will run at peak efficiency.'\n        );\n        \n        // Schedule next popup in 120 seconds if user doesn't accept\n        this.modeCycleTimer = setTimeout(() => {\n          this.cycleToNextMode();\n        }, 120000);\n        break;\n    }\n  }\n} ","import { WritingAssistant } from './writing-assistant';\n\nlet writingAssistant: WritingAssistant;\n\n// Initialize the application when DOM is loaded\ndocument.addEventListener('DOMContentLoaded', () => {\n  writingAssistant = new WritingAssistant();\n});\n\n// Global functions for HTML onclick handlers\ndeclare global {\n  interface Window {\n    acceptSuggestion: () => void;\n    dismissPopup: () => void;\n    handleSaveClick: () => void;\n  }\n}\n\nwindow.acceptSuggestion = () => {\n  if (writingAssistant) {\n    writingAssistant.acceptSuggestion();\n  }\n};\n\nwindow.dismissPopup = () => {\n  if (writingAssistant) {\n    writingAssistant.dismissPopup();\n  }\n};\n\nwindow.handleSaveClick = () => {\n  if (writingAssistant) {\n    // Create a fake event object\n    const fakeEvent = {\n      preventDefault: () => {},\n      stopPropagation: () => {}\n    } as Event;\n    (writingAssistant as any).handleSaveClick(fakeEvent);\n  }\n}; "],"names":["WORD_REPLACEMENTS","ANNOYING_POPUPS","RANDOM_ADDITIONS","SUGGESTIONS","INTERFERENCE_MESSAGES","CONFIG","AGGRESSIVE_AUTOCORRECT","PSYCHEDELIC_CONFIG","calculateWordCount","text","calculateCharCount","calculateEngagementScore","improvementCount","getRandomElement","array","shuffleArray","shuffled","i","j","findSentenceBoundaries","starts","ends","sentenceStartRegex","match","sentenceEndRegex","selectRandomAddition","additions","totalProbability","sum","addition","random","cumulativeProbability","applyPrefixAddition","validStarts","start","startIndex","applySuffixAddition","endIndex","applyInlineAddition","words","insertIndex","applyReplacementAddition","commonWords","wordToReplace","regex","applyRandomAddition","modifiedText","WritingAssistant","__publicField","clippyContainer","message","speechContent","messages","psychedelicMessages","regularMessages","saveButton","popup","originalText","correctionsMade","maxCorrections","correctWord","wrongWord","wordCountElement","charCountElement","improvementCountElement","engagementScoreElement","replacedWords","shuffledReplacements","replacementsMade","maxReplacements","replacement","newText","result","suggestion","duration","title","titleElement","messageElement","popupTitle","_a","popupMessage","_b","flyingRocket","event","button","rocket","colors","patterns","color1","color2","color3","pattern","background","writingAssistant","fakeEvent"],"mappings":"02BAEO,MAAMA,EAAuC,CAClD,CAAE,SAAU,MAAO,YAAa,eAAgB,SAAU,SAAU,KAAM,SAAA,EAC1E,CAAE,SAAU,MAAO,YAAa,SAAU,SAAU,YAAa,KAAM,SAAA,EACvE,CAAE,SAAU,KAAM,YAAa,gBAAiB,SAAU,SAAU,KAAM,SAAA,EAC1E,CAAE,SAAU,MAAO,YAAa,eAAgB,SAAU,SAAU,KAAM,SAAA,EAC1E,CAAE,SAAU,OAAQ,YAAa,SAAU,SAAU,SAAU,KAAM,SAAA,EACrE,CAAE,SAAU,OAAQ,YAAa,WAAY,SAAU,eAAgB,KAAM,SAAA,EAC7E,CAAE,SAAU,MAAO,YAAa,aAAc,SAAU,eAAgB,KAAM,SAAA,EAC9E,CAAE,SAAU,OAAQ,YAAa,6BAA8B,SAAU,eAAgB,KAAM,SAAA,EAC/F,CAAE,SAAU,OAAQ,YAAa,8BAA+B,SAAU,eAAgB,KAAM,SAAA,EAChG,CAAE,SAAU,UAAW,YAAa,mBAAoB,SAAU,YAAa,KAAM,SAAA,EACrF,CAAE,SAAU,WAAY,YAAa,mBAAoB,SAAU,YAAa,KAAM,SAAA,EACtF,CAAE,SAAU,YAAa,YAAa,2BAA4B,SAAU,eAAgB,KAAM,SAAA,EAClG,CAAE,SAAU,OAAQ,YAAa,sBAAuB,SAAU,eAAgB,KAAM,SAAA,EACxF,CAAE,SAAU,QAAS,YAAa,wBAAyB,SAAU,YAAa,KAAM,SAAA,EACxF,CAAE,SAAU,MAAO,YAAa,gDAAiD,SAAU,YAAa,KAAM,SAAA,CAChH,EAEaC,EAAmC,CAE9C,CACE,MAAO,4BACP,QAAS,iIACT,gBAAiB,CAAA,EAEnB,CACE,MAAO,gCACP,QAAS,2HACT,gBAAiB,CAAA,EAEnB,CACE,MAAO,qBACP,QAAS,yHACT,gBAAiB,CAAA,EAGnB,CACE,MAAO,yBACP,QAAS,qIACT,gBAAiB,CAAA,EAEnB,CACE,MAAO,0BACP,QAAS,wIACT,gBAAiB,CAAA,EAEnB,CACE,MAAO,4BACP,QAAS,8GACT,gBAAiB,CAAA,EAGnB,CACE,MAAO,sBACP,QAAS,mJACT,gBAAiB,CAAA,EAEnB,CACE,MAAO,cACP,QAAS,oJACT,gBAAiB,CAAA,EAEnB,CACE,MAAO,6BACP,QAAS,wIACT,gBAAiB,CAAA,EAGnB,CACE,MAAO,iBACP,QAAS,yIACT,gBAAiB,CAAA,EAEnB,CACE,MAAO,eACP,QAAS,6IACT,gBAAiB,CAAA,EAEnB,CACE,MAAO,YACP,QAAS,mIACT,gBAAiB,CAAA,CAErB,EAEaC,EAAqC,CAEhD,CAAE,KAAM,+CAAgD,KAAM,SAAU,QAAS,iBAAkB,YAAa,GAAA,EAChH,CAAE,KAAM,yCAA0C,KAAM,SAAU,QAAS,iBAAkB,YAAa,GAAA,EAC1G,CAAE,KAAM,iCAAkC,KAAM,SAAU,QAAS,iBAAkB,YAAa,EAAA,EAClG,CAAE,KAAM,wCAAyC,KAAM,SAAU,QAAS,iBAAkB,YAAa,GAAA,EACzG,CAAE,KAAM,gDAAiD,KAAM,SAAU,QAAS,iBAAkB,YAAa,GAAA,EAGjH,CAAE,KAAM,qCAAsC,KAAM,SAAU,QAAS,eAAgB,YAAa,GAAA,EACpG,CAAE,KAAM,uBAAwB,KAAM,SAAU,QAAS,eAAgB,YAAa,EAAA,EACtF,CAAE,KAAM,wBAAyB,KAAM,SAAU,QAAS,eAAgB,YAAa,GAAA,EACvF,CAAE,KAAM,qBAAsB,KAAM,SAAU,QAAS,eAAgB,YAAa,GAAA,EACpF,CAAE,KAAM,wCAAyC,KAAM,SAAU,QAAS,eAAgB,YAAa,GAAA,EACvG,CAAE,KAAM,gCAAiC,KAAM,SAAU,QAAS,eAAgB,YAAa,GAAA,EAC/F,CAAE,KAAM,uCAAwC,KAAM,SAAU,QAAS,eAAgB,YAAa,GAAA,EACtG,CAAE,KAAM,+CAAgD,KAAM,SAAU,QAAS,eAAgB,YAAa,GAAA,EAG9G,CAAE,KAAM,gBAAiB,KAAM,SAAU,QAAS,gBAAiB,YAAa,GAAA,EAChF,CAAE,KAAM,kBAAmB,KAAM,SAAU,QAAS,gBAAiB,YAAa,GAAA,EAClF,CAAE,KAAM,mBAAoB,KAAM,SAAU,QAAS,gBAAiB,YAAa,GAAA,EACnF,CAAE,KAAM,iBAAkB,KAAM,SAAU,QAAS,gBAAiB,YAAa,GAAA,EACjF,CAAE,KAAM,eAAgB,KAAM,SAAU,QAAS,gBAAiB,YAAa,GAAA,EAC/E,CAAE,KAAM,mBAAoB,KAAM,SAAU,QAAS,gBAAiB,YAAa,GAAA,EACnF,CAAE,KAAM,gBAAiB,KAAM,SAAU,QAAS,gBAAiB,YAAa,GAAA,EAChF,CAAE,KAAM,eAAgB,KAAM,SAAU,QAAS,gBAAiB,YAAa,GAAA,EAG/E,CAAE,KAAM,UAAW,KAAM,cAAe,QAAS,gBAAiB,YAAa,GAAA,EAC/E,CAAE,KAAM,YAAa,KAAM,cAAe,QAAS,gBAAiB,YAAa,GAAA,EACjF,CAAE,KAAM,aAAc,KAAM,cAAe,QAAS,gBAAiB,YAAa,GAAA,EAClF,CAAE,KAAM,WAAY,KAAM,cAAe,QAAS,gBAAiB,YAAa,GAAA,EAChF,CAAE,KAAM,WAAY,KAAM,cAAe,QAAS,gBAAiB,YAAa,GAAA,CAClF,EAWaC,EAAc,CACzB,mDACA,0DACA,mEACA,0EACA,oEACF,EAEaC,EAAwB,CACnC,0DACA,sDACA,yDACA,gDACF,EAEaC,EAAS,CACpB,mBAAoB,IACpB,gBAAiB,GACjB,qBAAsB,GACtB,mBAAoB,KACpB,6BAA8B,IAC9B,2BAA4B,GAC5B,gBAAiB,EACnB,EAGaC,EAAoD,CAC/D,MAAS,QACT,UAAY,QACZ,IAAO,OACP,KAAQ,SACR,MAAS,QACT,KAAQ,OACR,OAAU,SACV,OAAU,SACV,OAAU,SACV,MAAS,OACT,UAAa,YACb,WAAc,aACd,QAAW,UACX,MAAS,OACT,QAAU,OACV,SAAW,OACX,OAAS,MACT,QAAU,QACV,KAAQ,OACR,OAAU,SACV,OAAU,SACV,OAAU,SACV,KAAQ,QACR,UAAa,YACb,WAAc,aACd,QAAW,UACX,KAAQ,OACV,EAsBaC,EAAqB,CAEhC,gBAAiB,IACjB,kBAAmB,CACjB,UAAW,UAAW,UAAW,UAAW,UAAW,UACvD,UAAW,UAAW,UAAW,UAAW,UAAW,SAAA,EAEzD,SAAU,CACR,kBACA,kBACA,iBACA,2BAAA,CAEJ,EC3NO,SAASC,EAAmBC,EAAsB,CACvD,OAAOA,EAAK,OAASA,EAAK,OAAO,MAAM,KAAK,EAAE,OAAS,CACzD,CAEO,SAASC,EAAmBD,EAAsB,CACvD,OAAOA,EAAK,MACd,CAEO,SAASE,EAAyBC,EAAkC,CACzE,OAAO,KAAK,IAAIA,EAAmB,GAAI,GAAG,CAC5C,CAiBO,SAASC,EAAoBC,EAAe,CACjD,OAAOA,EAAM,KAAK,MAAM,KAAK,SAAWA,EAAM,MAAM,CAAC,CACvD,CAEO,SAASC,EAAgBD,EAAiB,CAC/C,MAAME,EAAW,CAAC,GAAGF,CAAK,EAC1B,QAASG,EAAID,EAAS,OAAS,EAAGC,EAAI,EAAGA,IAAK,CAC5C,MAAMC,EAAI,KAAK,MAAM,KAAK,UAAYD,EAAI,EAAE,EAC5C,CAACD,EAASC,CAAC,EAAGD,EAASE,CAAC,CAAC,EAAI,CAACF,EAASE,CAAC,EAAGF,EAASC,CAAC,CAAC,CAAA,CAExD,OAAOD,CACT,CAEO,SAASG,EAAuBV,EAAoD,CACzF,MAAMW,EAAmB,CAAA,EACnBC,EAAiB,CAAA,EAGjBC,EAAqB,iBAC3B,IAAIC,EACJ,MAAQA,EAAQD,EAAmB,KAAKb,CAAI,KAAO,MACjDW,EAAO,KAAKG,EAAM,MAAQA,EAAM,CAAC,EAAE,OAAS,CAAC,EAI3Cd,EAAK,OAAS,GAAK,CAACW,EAAO,SAAS,CAAC,GACvCA,EAAO,QAAQ,CAAC,EAIlB,MAAMI,EAAmB,iBACzB,MAAQD,EAAQC,EAAiB,KAAKf,CAAI,KAAO,MAC/CY,EAAK,KAAKE,EAAM,MAAQ,CAAC,EAG3B,MAAO,CAAE,OAAAH,EAAQ,KAAAC,CAAA,CACnB,CAEO,SAASI,EAAqBC,EAAoD,CACvF,MAAMC,EAAmBD,EAAU,OAAO,CAACE,EAAKC,IAAaD,EAAMC,EAAS,YAAa,CAAC,EACpFC,EAAS,KAAK,OAAA,EAAWH,EAE/B,IAAII,EAAwB,EAC5B,UAAWF,KAAYH,EAErB,GADAK,GAAyBF,EAAS,YAC9BC,GAAUC,EACZ,OAAOF,EAIX,OAAO,IACT,CAEO,SAASG,EAAoBvB,EAAcoB,EAAkC,CAClF,KAAM,CAAE,OAAAT,CAAA,EAAWD,EAAuBV,CAAI,EAC9C,GAAIW,EAAO,SAAW,EAAG,OAAOX,EAGhC,MAAMwB,EAAcb,EAAO,OAAOc,GAASA,EAAQ,CAAC,EAGpD,GAAID,EAAY,SAAW,EAAG,OAAOxB,EAGrC,MAAM0B,EAAaF,EAAY,KAAK,MAAM,KAAK,OAAA,EAAWA,EAAY,MAAM,CAAC,EAE7E,OAAOxB,EAAK,MAAM,EAAG0B,CAAU,EAAIN,EAAS,KAAOpB,EAAK,MAAM0B,CAAU,CAC1E,CAEO,SAASC,EAAoB3B,EAAcoB,EAAkC,CAClF,KAAM,CAAE,KAAAR,CAAA,EAASF,EAAuBV,CAAI,EAC5C,GAAIY,EAAK,SAAW,EAAG,OAAOZ,EAG9B,MAAM4B,EAAWhB,EAAK,KAAK,MAAM,KAAK,OAAA,EAAWA,EAAK,MAAM,CAAC,EAE7D,OAAOZ,EAAK,MAAM,EAAG4B,CAAQ,EAAIR,EAAS,KAAOpB,EAAK,MAAM4B,CAAQ,CACtE,CAEO,SAASC,EAAoB7B,EAAcoB,EAAkC,CAClF,MAAMU,EAAQ9B,EAAK,MAAM,KAAK,EAC9B,GAAI8B,EAAM,OAAS,EAAG,OAAO9B,EAG7B,MAAM+B,EAAc,KAAK,MAAM,KAAK,UAAYD,EAAM,OAAS,EAAE,EAAI,EAErE,OAAAA,EAAM,OAAOC,EAAa,EAAGX,EAAS,IAAI,EACnCU,EAAM,KAAK,GAAG,CACvB,CAEO,SAASE,EAAyBhC,EAAcoB,EAAkC,CAEvF,MAAMa,EAAc,CAAC,MAAO,OAAQ,KAAM,MAAO,OAAQ,OAAQ,OAAQ,OAAQ,QAAS,MAAM,EAC1FC,EAAgBD,EAAY,KAAK,MAAM,KAAK,OAAA,EAAWA,EAAY,MAAM,CAAC,EAE1EE,EAAQ,IAAI,OAAO,MAAMD,CAAa,MAAO,IAAI,EACvD,OAAIlC,EAAK,MAAMmC,CAAK,EACXnC,EAAK,QAAQmC,EAAOf,EAAS,IAAI,EAGnCpB,CACT,CAEO,SAASoC,EAAoBpC,EAAciB,EAAiE,CACjH,GAAIjB,EAAK,OAAS,SAAW,CAAE,KAAAA,EAAM,QAAS,EAAA,EAE9C,MAAMoB,EAAWJ,EAAqBC,CAAS,EAC/C,GAAI,CAACG,EAAU,MAAO,CAAE,KAAApB,EAAM,QAAS,EAAA,EAEvC,IAAIqC,EAAerC,EAEnB,OAAQoB,EAAS,KAAA,CACf,IAAK,SACHiB,EAAed,EAAoBvB,EAAMoB,CAAQ,EACjD,MACF,IAAK,SACHiB,EAAeV,EAAoB3B,EAAMoB,CAAQ,EACjD,MACF,IAAK,SACHiB,EAAeR,EAAoB7B,EAAMoB,CAAQ,EACjD,MACF,IAAK,cACHiB,EAAeL,EAAyBhC,EAAMoB,CAAQ,EACtD,KAAA,CAGJ,MAAO,CAAE,KAAMiB,EAAc,QAASA,IAAiBrC,CAAA,CACzD,CCxJO,MAAMsC,CAAiB,CAgC5B,aAAc,CA/BNC,EAAA,aAAsB,CAC5B,UAAW,EACX,UAAW,EACX,iBAAkB,EAClB,gBAAiB,CAAA,GAGXA,EAAA,sBAAiB,GACjBA,EAAA,uBAAkB,GAClBA,EAAA,0BACAA,EAAA,sBACAA,EAAA,gCACAA,EAAA,oBACAA,EAAA,qBAAgB,IAChBA,EAAA,kBAAa,IACbA,EAAA,0BAAqB,IACrBA,EAAA,yBACAA,EAAA,yBAAoB,GACpBA,EAAA,yBAAoB,IACpBA,EAAA,uBACAA,EAAA,mBAAc,UAEdA,EAAA,eACAA,EAAA,6BACAA,EAAA,cACAA,EAAA,qBACAA,EAAA,qBACAA,EAAA,eACAA,EAAA,2BACAA,EAAA,aAGN,KAAK,OAAS,SAAS,eAAe,QAAQ,EAC9C,KAAK,qBAAuB,SAAS,eAAe,aAAa,EACjE,KAAK,MAAQ,SAAS,eAAe,OAAO,EAC5C,KAAK,aAAe,SAAS,eAAe,eAAe,EAC3D,KAAK,aAAe,SAAS,eAAe,cAAc,EAC1D,KAAK,KAAO,SAAS,KAErB,KAAK,gBAAA,EACL,KAAK,yBAAA,EACL,KAAK,YAAA,EACL,KAAK,YAAA,EAGL,WAAW,IAAM,CACV,KAAK,aACR,KAAK,cAAc,KAAK,iBAAiB,EACzC,KAAK,WAAa,GACpB,EACC,GAAI,EAGP,WAAW,IAAM,CACf,KAAK,iBAAA,CAAiB,EACrB,IAAK,CAAA,CAKF,iBAAwB,CAE9B,KAAK,OAAS,SAAS,cAAc,KAAK,EAC1C,KAAK,OAAO,GAAK,SACjB,KAAK,OAAO,UAAY,iBACxB,KAAK,OAAO,UAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAyBxB,KAAK,mBAAqB,KAAK,OAAO,cAAc,uBAAuB,EAG3E,MAAMC,EAAkB,SAAS,eAAe,kBAAkB,EAC9DA,GACFA,EAAgB,YAAY,KAAK,MAAM,CACzC,CAGM,sBAAiC,CACvC,MAAO,CACL,4FACA,4GACA,+EACA,oFACA,qEACA,sEACA,gFACA,6DACA,mEACA,wDACA,uEACA,uEACA,kFACA,uDACA,oDACA,kEACA,gEACA,6CACA,4DACA,2DACA,4DACA,iDACA,2DACA,qDACA,gDACA,gEACA,2DACA,0CACA,+CACA,6CACA,8DACA,oDAEA,gEACA,qDACA,mDACA,kDACA,gDACA,gEACA,8CACA,qDACA,kDACA,8DACA,yDACA,0DACA,4DACA,0DACA,mDACA,wDACA,wDACA,6DACA,4DACA,uDAAA,CACF,CAGM,iBAA0B,CAChC,MAAO,8DAAA,CAGD,cAAcC,EAAuB,CAC3C,GAAI,KAAK,cAAe,OAExB,KAAK,cAAgB,GACrB,KAAK,OAAO,UAAU,IAAI,SAAS,EAEnC,MAAMC,EAAgB,KAAK,mBAAmB,cAAc,iBAAiB,EACzEA,IACFA,EAAc,YAAcD,GAG9B,KAAK,mBAAmB,UAAU,IAAI,SAAS,EAG/C,WAAW,IAAM,CACf,KAAK,cAAA,CAAc,EAClB,GAAI,CAAA,CAGD,eAAsB,CAC5B,KAAK,cAAgB,GACrB,KAAK,OAAO,UAAU,OAAO,SAAS,EACtC,KAAK,mBAAmB,UAAU,OAAO,SAAS,CAAA,CAG5C,qBAA4B,CAClC,KAAK,YAAc,YAAY,IAAM,CACnC,GAAI,KAAK,OAAO,MAAM,OAAS,IAAM,KAAK,OAAA,EAAW,GAAK,CACxD,MAAME,EAAW,KAAK,qBAAA,EACtB,IAAIF,EAGJ,GAAI,KAAK,mBAAoB,CAC3B,MAAMG,EAAsBD,EAAS,MAAM,EAAE,EACvCE,EAAkBF,EAAS,MAAM,EAAG,EAAE,EAGxC,KAAK,OAAA,EAAW,GAClBF,EAAUrC,EAAiBwC,CAAmB,EAE9CH,EAAUrC,EAAiByC,CAAe,CAC5C,MAEAJ,EAAUrC,EAAiBuC,EAAS,MAAM,EAAG,EAAE,CAAC,EAGlD,KAAK,cAAcF,CAAO,CAAA,CAC5B,EACC,IAAK,CAAA,CAGF,0BAAiC,CACvC,KAAK,OAAO,iBAAiB,QAAS,KAAK,YAAY,KAAK,IAAI,CAAC,EACjE,KAAK,aAAa,iBAAiB,QAAS,KAAK,aAAa,KAAK,IAAI,CAAC,EAGxE,MAAMK,EAAa,SAAS,eAAe,aAAa,EACpDA,GACFA,EAAW,iBAAiB,aAAc,KAAK,sBAAsB,KAAK,IAAI,CAAC,CACjF,CAGM,aAAoB,CAe1B,GAdA,KAAK,YAAA,EACL,KAAK,iBAGD,KAAK,mBACP,aAAa,KAAK,iBAAiB,EAIrC,KAAK,kBAAoB,WAAW,IAAM,CACxC,KAAK,kBAAA,CAAkB,EACtBlD,EAAO,kBAAkB,EAGxB,KAAK,eAAiBA,EAAO,kBAAoB,EAAG,CACtD,MAAMmD,EAAQvD,EAAgB,KAAK,IAAI,KAAK,gBAAiBA,EAAgB,OAAS,CAAC,CAAC,EACxF,KAAK,UAAUuD,EAAM,MAAOA,EAAM,OAAO,EACzC,KAAK,iBAAA,CAIH,KAAK,MAAM,UAAY,GAAK,KAAK,MAAM,UAAYnD,EAAO,uBAAyB,GACrF,KAAK,cAAcQ,EAAiBV,CAAW,CAAC,EAIlD,KAAK,2BAAA,CAA2B,CAG1B,4BAAmC,CACzC,IAAIM,EAAO,KAAK,OAAO,MACnBgD,EAAehD,EACfiD,EAAkB,EACtB,MAAMC,EAAiB,EAGvB,SAAW,CAACC,EAAaC,CAAS,IAAK,OAAO,QAAQvD,CAAsB,EAAG,CAC7E,GAAIoD,GAAmBC,EAAgB,MAGvC,MAAMf,EAAQ,IAAI,OAAO,MAAMgB,CAAW,MAAO,IAAI,EACrCnD,EAAK,MAAMmC,CAAK,GAEjB,KAAK,OAAA,EAAW,KAC7BnC,EAAOA,EAAK,QAAQmC,EAAOiB,CAAS,EACpCH,IAGA,WAAW,IAAM,CACf,KAAK,iBAAiB,mBAAmBE,CAAW,SAASC,CAAS,uBAAuB,CAAA,EAC5F,GAAG,EACR,CAIEpD,IAASgD,IACX,KAAK,OAAO,MAAQhD,EACpB,KAAK,YAAA,EACL,KAAK,MAAM,mBACb,CAGM,aAAoB,CAC1B,MAAMA,EAAO,KAAK,OAAO,MACzB,KAAK,MAAM,UAAYD,EAAmBC,CAAI,EAC9C,KAAK,MAAM,UAAYC,EAAmBD,CAAI,EAC9C,KAAK,MAAM,gBAAkBE,EAAyB,KAAK,MAAM,gBAAgB,EAEjF,KAAK,mBAAA,CAAmB,CAGlB,oBAA2B,CACjC,MAAMmD,EAAmB,SAAS,eAAe,YAAY,EACvDC,EAAmB,SAAS,eAAe,YAAY,EACvDC,EAA0B,SAAS,eAAe,mBAAmB,EACrEC,EAAyB,SAAS,eAAe,kBAAkB,EAErEH,IAAkBA,EAAiB,YAAc,KAAK,MAAM,UAAU,SAAA,GACtEC,IAAkBA,EAAiB,YAAc,KAAK,MAAM,UAAU,SAAA,GACtEC,IAAyBA,EAAwB,YAAc,KAAK,MAAM,iBAAiB,SAAA,GAC3FC,IAAwBA,EAAuB,YAAc,GAAG,KAAK,MAAM,eAAe,IAAA,CAGxF,mBAA0B,CAChC,IAAIxD,EAAO,KAAK,OAAO,MACvB,GAAIA,EAAK,OAAS,GAAI,OAGtB,MAAMyD,MAAoB,IAGpBC,EAAuBpD,EAAaf,CAAiB,EAC3D,IAAIoE,EAAmB,EACvB,MAAMC,EAAkB,EAExB,UAAWC,KAAeH,EAAsB,CAC9C,GAAIC,GAAoBC,EAAiB,MAGzC,GAAIH,EAAc,IAAII,EAAY,SAAS,YAAA,CAAa,EACtD,SAIF,MAAM1B,EAAQ,IAAI,OAAO,MAAM0B,EAAY,QAAQ,MAAO,GAAG,EAG7D,GAFc7D,EAAK,MAAMmC,CAAK,GAEjB,CAAC0B,EAAY,YAAY,YAAA,EAAc,SAASA,EAAY,SAAS,YAAA,CAAa,EAAG,CAEhG,IAAIC,EACJ,OAAQD,EAAY,KAAA,CAClB,IAAK,UACHC,EAAU9D,EAAK,QAAQmC,EAAO,GAAG0B,EAAY,WAAW,IAAIA,EAAY,QAAQ,EAAE,EAClF,MACF,IAAK,SACHC,EAAU9D,EAAK,QAAQmC,EAAO,GAAG0B,EAAY,QAAQ,IAAIA,EAAY,WAAW,EAAE,EAClF,MACF,QACEC,EAAU9D,EAAK,QAAQmC,EAAO0B,EAAY,WAAW,CAAA,CAGrDC,IAAY9D,IACdA,EAAO8D,EAGHD,EAAY,OAAS,WAAaA,EAAY,OAAS,UAEzDJ,EAAc,IAAII,EAAY,SAAS,YAAA,CAAa,EACpDJ,EAAc,IAAII,EAAY,YAAY,YAAA,CAAa,GAEvDJ,EAAc,IAAII,EAAY,SAAS,YAAA,CAAa,EAEtD,KAAK,cAAc,YAAYA,EAAY,QAAQ,SAASA,EAAY,WAAW,uBAAuB,EAC1G,KAAK,MAAM,mBACXF,IACF,CACF,CAIF,GAAI,KAAK,SAAW/D,EAAO,gBAAiB,CAC1C,MAAMmE,EAAS3B,EAAoBpC,EAAMP,CAAgB,EACrDsE,EAAO,UACT/D,EAAO+D,EAAO,KACd,KAAK,cAAc,qEAAqE,EACxF,KAAK,MAAM,mBACb,CAGE/D,IAAS,KAAK,OAAO,QACvB,KAAK,OAAO,MAAQA,EACpB,KAAK,YAAA,EACL,KAAK,iBAAiB,+BAA+B,EACvD,CAGM,cAAcA,EAAoB,CACxC,MAAMgE,EAAa,SAAS,cAAc,KAAK,EAC/CA,EAAW,UAAY,aACvBA,EAAW,YAAchE,EACzB,KAAK,qBAAqB,YAAYgE,CAAU,EAChD,KAAK,qBAAqB,UAAY,KAAK,qBAAqB,YAAA,CAG1D,iBAAiBvB,EAAiBwB,EAAW,IAAY,CAC/D,KAAK,aAAa,YAAcxB,EAChC,KAAK,aAAa,UAAU,IAAI,MAAM,EACtC,WAAW,IAAM,CACf,KAAK,aAAa,UAAU,OAAO,MAAM,CAAA,EACxCwB,CAAQ,CAAA,CAGL,UAAUC,EAAezB,EAAuB,CACtD,MAAM0B,EAAe,SAAS,eAAe,aAAa,EACpDC,EAAiB,SAAS,eAAe,eAAe,EAE1DD,MAA2B,YAAcD,GACzCE,MAA+B,YAAc3B,GAEjD,KAAK,MAAM,UAAU,IAAI,MAAM,EAC/B,KAAK,aAAa,UAAU,IAAI,MAAM,CAAA,CAGjC,cAAqB,CAC1B,KAAK,MAAM,UAAU,OAAO,MAAM,EAClC,KAAK,aAAa,UAAU,OAAO,MAAM,CAAA,CAGpC,kBAAyB,SAC9B,KAAK,aAAA,EAGL,MAAM4B,GAAaC,EAAA,SAAS,eAAe,aAAa,IAArC,YAAAA,EAAwC,YACrDC,GAAeC,EAAA,SAAS,eAAe,eAAe,IAAvC,YAAAA,EAA0C,YAG/D,GAAIH,GAAcE,EAAc,CAE9B,GAAIF,EAAW,SAAS,sBAAsB,GAAK,KAAK,cAAgB,SAAU,CAChF,QAAQ,IAAI,sCAAsC,EAClD,KAAK,YAAc,cACnB,KAAK,4BAAA,EAGD,KAAK,gBACP,aAAa,KAAK,cAAc,EAElC,KAAK,eAAiB,WAAW,IAAM,CACrC,KAAK,gBAAA,CAAgB,EACpB,IAAM,EACT,MAAA,CAIF,GAAIA,EAAW,SAAS,YAAY,GAAK,KAAK,cAAgB,cAAe,CAC3E,QAAQ,IAAI,+BAA+B,EAC3C,KAAK,YAAc,OACnB,KAAK,6BAAA,EACL,KAAK,eAAA,EAGD,KAAK,gBACP,aAAa,KAAK,cAAc,EAElC,KAAK,eAAiB,WAAW,IAAM,CACrC,KAAK,gBAAA,CAAgB,EACpB,GAAK,EACR,MAAA,CAIF,GAAIA,EAAW,SAAS,kBAAkB,GAAK,KAAK,cAAgB,OAAQ,CAC1E,QAAQ,IAAI,iCAAiC,EAC7C,KAAK,YAAc,SACnB,KAAK,gBAAA,EAGD,KAAK,gBACP,aAAa,KAAK,cAAc,EAElC,KAAK,eAAiB,WAAW,IAAM,CACrC,KAAK,gBAAA,CAAgB,EACpB,IAAM,EACT,MAAA,CACF,CAIF,GAAIA,GAAcE,GACbF,EAAW,SAAS,cAAc,IACjCE,EAAa,SAAS,aAAa,GAAKA,EAAa,SAAS,sBAAsB,IACtF,KAAK,cAAgB,SAAU,CAEjC,KAAK,4BAAA,EACL,MAAA,CAIF,GAAIF,GAAcE,IACbF,EAAW,SAAS,SAAS,GAAKA,EAAW,SAAS,KAAK,GAAKA,EAAW,SAAS,MAAM,IAC3F,CAACA,EAAW,SAAS,cAAc,GACnC,CAACE,EAAa,SAAS,aAAa,GACpC,CAACA,EAAa,SAAS,YAAY,EAAG,CAExC,WAAW,IAAM,CACf,KAAK,UACH,sBACA,+GAAA,CACF,EACC,GAAG,EACN,MAAA,CAGF,KAAK,iBAAiB,mDAAoD,EAC1E,KAAK,MAAM,mBACX,KAAK,YAAA,EAGL,WAAW,IAAM,CACf,KAAK,kBAAA,CAAkB,EACtB,GAAG,CAAA,CAGA,aAAoB,CAE1B,KAAK,cAAgB,YAAY,IAAM,CACjC,KAAK,OAAO,MAAM,OAAS,KAC7B,KAAK,iBAAiB,mCAAmC,EACzD,WAAW,IAAM,CACf,KAAK,kBAAA,CAAkB,EACtB,GAAG,EACR,EACC3E,EAAO,kBAAkB,EAG5B,KAAK,wBAA0B,YAAY,IAAM,CAC/C,GAAI,KAAK,OAAO,MAAM,OAAS,IAAM,KAAK,OAAA,EAAWA,EAAO,2BAA4B,CACtF,MAAM6C,EAAUrC,EAAiBT,CAAqB,EACtD,KAAK,iBAAiB8C,CAAO,EAC7B,WAAW,IAAM,KAAK,kBAAA,EAAqB,GAAG,CAAA,CAChD,EACC7C,EAAO,4BAA4B,EAGtC,WAAW,IAAM,CACf,KAAK,iBAAiB,8DAA+D,GAAI,CAAA,EACxF,GAAK,EAER,WAAW,IAAM,CACf,KAAK,iBAAiB,wFAAyF,GAAI,CAAA,EAClH,IAAK,EAER,KAAK,oBAAA,EACL,KAAK,iBAAA,CAAiB,CAGjB,SAAgB,CACjB,KAAK,mBAAmB,aAAa,KAAK,iBAAiB,EAC3D,KAAK,eAAe,cAAc,KAAK,aAAa,EACpD,KAAK,yBAAyB,cAAc,KAAK,uBAAuB,EACxE,KAAK,aAAa,cAAc,KAAK,WAAW,EAChD,KAAK,kBAAkB,cAAc,KAAK,gBAAgB,EAG9D,MAAM6E,EAAe,SAAS,eAAe,kBAAkB,EAC3DA,GACFA,EAAa,OAAA,EAIf,MAAM3B,EAAa,SAAS,eAAe,aAAa,EACpDA,IACFA,EAAW,UAAU,OAAO,QAAQ,EACpCA,EAAW,MAAM,SAAW,GAC5BA,EAAW,MAAM,IAAM,GACvBA,EAAW,MAAM,KAAO,GACxBA,EAAW,MAAM,OAAS,GAC1BA,EAAW,MAAM,WAAa,GAC9BA,EAAW,MAAM,UAAY,GAC7BA,EAAW,MAAM,QAAU,KAG7B,KAAK,6BAAA,CAA6B,CAG5B,sBAAsB4B,EAAoB,CAChD,MAAMC,EAASD,EAAM,OACf1B,EAAe2B,EAAO,YAExB,KAAK,qBACPA,EAAO,YAAc,oBAErB,WAAW,IAAM,CACfA,EAAO,YAAc3B,CAAA,EACpB,GAAI,EACT,CAGK,gBAAgB0B,EAAoB,CACzC,MAAM5B,EAAa,SAAS,eAAe,aAAa,EACxD,GACE,KAAK,oBACLA,GACAA,EAAW,aACXA,EAAW,YAAY,SAAS,mBAAmB,EACnD,CACA,GAAI,SAAS,eAAe,kBAAkB,EAAG,OAGjD,MAAM8B,EAAS,SAAS,cAAc,KAAK,EAC3CA,EAAO,GAAK,mBACZA,EAAO,YAAc,KACrBA,EAAO,MAAM,SAAW,QACxBA,EAAO,MAAM,KAAO,MACpBA,EAAO,MAAM,IAAM,MACnBA,EAAO,MAAM,SAAW,OACxBA,EAAO,MAAM,OAAS,OACtBA,EAAO,MAAM,cAAgB,OAC7BA,EAAO,MAAM,UAAY,wBACzBA,EAAO,MAAM,WAAa,kBAC1B,SAAS,KAAK,YAAYA,CAAM,EAGhC,WAAW,IAAM,CACfA,EAAO,MAAM,UAAY,0EACzBA,EAAO,MAAM,QAAU,GAAA,EACtB,GAAG,EAGN,WAAW,IAAM,CACfA,EAAO,OAAA,CAAO,EACb,IAAI,CAAA,CACT,CAIM,6BAAoC,CACtC,KAAK,qBAET,KAAK,mBAAqB,GAC1B,KAAK,KAAK,UAAU,IAAI,kBAAkB,EAC1C,KAAK,0BAAA,EAGL,KAAK,iBAAiB,kEAAmE,GAAI,EAG7F,WAAW,IAAM,CACf,KAAK,cAAc,+DAA+D,CAAA,EACjF,GAAI,EAAA,CAGD,2BAAkC,CACxC,KAAK,iBAAmB,YAAY,IAAM,CACxC,KAAK,4BAAA,CAA4B,EAChC9E,EAAmB,eAAe,CAAA,CAG/B,6BAAoC,CAC1C,GAAI,CAAC,KAAK,mBAAoB,OAE9B,MAAM+E,EAAS/E,EAAmB,kBAC5BgF,EAAWhF,EAAmB,SAG9BiF,EAASF,EAAO,KAAK,iBAAiB,EACtCG,EAASH,GAAQ,KAAK,kBAAoB,GAAKA,EAAO,MAAM,EAC5DI,EAASJ,GAAQ,KAAK,kBAAoB,GAAKA,EAAO,MAAM,EAG5DK,EAAU9E,EAAiB0E,CAAQ,EAEzC,IAAIK,EAAa,GACjB,OAAQD,EAAA,CACN,IAAK,kBACHC,EAAa,6BAA6B,KAAK,OAAA,EAAW,GAAG,KAAK,KAAK,OAAA,EAAW,GAAG,MAAMJ,CAAM,KAAKC,CAAM,KAAKC,CAAM,IACvH,MACF,IAAK,kBACHE,EAAa,mBAAmB,KAAK,OAAA,EAAW,GAAG,QAAQJ,CAAM,KAAKC,CAAM,KAAKC,CAAM,IACvF,MACF,IAAK,iBACHE,EAAa,uBAAuB,KAAK,OAAA,EAAW,GAAG,QAAQJ,CAAM,KAAKC,CAAM,KAAKC,CAAM,IAC3F,MACF,IAAK,4BACHE,EAAa,6BAA6B,KAAK,OAAA,EAAW,GAAG,QAAQJ,CAAM,QAAQC,CAAM,SAASC,CAAM,QACxG,KAAA,CAGJ,KAAK,KAAK,MAAM,WAAaE,EAC7B,KAAK,mBAAqB,KAAK,kBAAoB,GAAKN,EAAO,MAAA,CAGzD,8BAAqC,CAC3C,KAAK,mBAAqB,GAC1B,KAAK,KAAK,UAAU,OAAO,kBAAkB,EAC7C,KAAK,KAAK,MAAM,WAAa,GAEzB,KAAK,mBACP,cAAc,KAAK,gBAAgB,EACnC,KAAK,iBAAmB,QAI1B,MAAMJ,EAAe,SAAS,eAAe,kBAAkB,EAC3DA,GACFA,EAAa,OAAA,EAIf,MAAM3B,EAAa,SAAS,eAAe,aAAa,EACpDA,IACFA,EAAW,YAAc,mBACzBA,EAAW,UAAU,OAAO,QAAQ,EACpCA,EAAW,MAAM,SAAW,GAC5BA,EAAW,MAAM,IAAM,GACvBA,EAAW,MAAM,KAAO,GACxBA,EAAW,MAAM,OAAS,GAC1BA,EAAW,MAAM,WAAa,GAC9BA,EAAW,MAAM,UAAY,GAC7BA,EAAW,MAAM,QAAU,IAC7B,CAGM,gBAAuB,CAC7B,KAAK,6BAAA,EACL,KAAK,KAAK,UAAU,IAAI,WAAW,CAAA,CAG7B,iBAAwB,CAC9B,KAAK,KAAK,UAAU,OAAO,WAAW,EACtC,KAAK,6BAAA,CAA6B,CAG5B,kBAAyB,CAE/B,WAAW,IAAM,CACf,KAAK,gBAAA,CAAgB,EACpB,GAAK,CAAA,CAGF,iBAAwB,CAG9B,OAFA,QAAQ,IAAI,gCAAgC,KAAK,WAAW,EAAE,EAEtD,KAAK,YAAA,CACX,IAAK,SAEH,QAAQ,IAAI,gCAAgC,EAC5C,KAAK,UACH,qDACA,4JAAA,EAIF,KAAK,eAAiB,WAAW,IAAM,CACrC,KAAK,gBAAA,CAAgB,EACpB,IAAM,EACT,MAEF,IAAK,cAEH,QAAQ,IAAI,yBAAyB,EACrC,KAAK,UACH,4CACA,iIAAA,EAIF,KAAK,eAAiB,WAAW,IAAM,CACrC,KAAK,gBAAA,CAAgB,EACpB,GAAK,EACR,MAEF,IAAK,OAEH,QAAQ,IAAI,2BAA2B,EACvC,KAAK,UACH,yCACA,0IAAA,EAIF,KAAK,eAAiB,WAAW,IAAM,CACrC,KAAK,gBAAA,CAAgB,EACpB,IAAM,EACT,KAAA,CACJ,CAEJ,CCtwBA,IAAIsC,EAGJ,SAAS,iBAAiB,mBAAoB,IAAM,CAClDA,EAAmB,IAAI9C,CACzB,CAAC,EAWD,OAAO,iBAAmB,IAAM,CAC1B8C,GACFA,EAAiB,iBAAA,CAErB,EAEA,OAAO,aAAe,IAAM,CACtBA,GACFA,EAAiB,aAAA,CAErB,EAEA,OAAO,gBAAkB,IAAM,CAC7B,GAAIA,EAAkB,CAEpB,MAAMC,EAAY,CAChB,eAAgB,IAAM,CAAA,EACtB,gBAAiB,IAAM,CAAA,CAAC,EAEzBD,EAAyB,gBAAgBC,CAAS,CAAA,CAEvD"}